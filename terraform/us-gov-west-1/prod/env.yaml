# Common variables for the environment

# The name will be used as a prefix for resources
name: "bigbang-dev"

# The private CIDR range to use for the VPC and cluster.
cidr: "10.0.0.0/16"

# Cluster information
cluster:

  # Specify version of rke2 to run
  rke2_version: "v1.23.5+rke2r1"

  server:

    # Number of replicas
    replicas: 3

    # EC2 Instance type
    type: "m5d.xlarge"

    # Disk
    storage:
      size: 100
      encrypted: true
      type: "gp3"

  agent:

    # Autoscale counts
    replicas:
      min: 2
      desired: 3
      max: 10

    # EC2 type
    type: "m5d.4xlarge"

    # Disk
    storage:
      size: 200
      encrypted: true
      type: "gp3"

  init_script: |-
    # Configure aws cli default region to current region, it'd be great if the aws cli did this on install........
    aws configure set default.region $(curl -s http://169.254.169.254/latest/meta-data/placement/region)

    # Mount added storage as kubernetes ephemeral-storage
    mkfs -t xfs /dev/nvme2n1
    mkdir -p /var/lib/rancher
    mount /dev/nvme2n1 /var/lib/rancher
    mkdir -p /var/lib/rancher/rke2
    mkdir -p /var/lib/rancher/kubelet
    ln -s /var/lib/rancher/kubelet /var/lib/kubelet

    # Tune virtual memory for packages (e.g. Elasticsearch)
    sysctl -w vm.max_map_count=524288
    echo 'vm.max_map_count=262144' > /etc/sysctl.d/vm-max_map_count.conf

    # Increase file descriptor and process limits for packages (e.g. SonarQube)
    sysctl -w fs.file-max=131072
    ulimit -n 131072
    ulimit -u 8192

    # Preload kernel modules required by istio-init, required for selinux enforcing instances using istio-init
    modprobe xt_REDIRECT
    modprobe xt_owner
    modprobe xt_statistic

    # Persist modules after reboots
    printf "xt_REDIRECT\nxt_owner\nxt_statistic\n" | sudo tee -a /etc/modules

    # iptables rules needed based on https://docs.rke2.io/install/requirements/#networking
    iptables -A INPUT -p tcp -m tcp --dport 2379 -m state --state NEW -j ACCEPT
    iptables -A INPUT -p tcp -m tcp --dport 2380 -m state --state NEW -j ACCEPT
    iptables -A INPUT -p tcp -m tcp --dport 9345 -m state --state NEW -j ACCEPT
    iptables -A INPUT -p tcp -m tcp --dport 6443 -m state --state NEW -j ACCEPT
    iptables -A INPUT -p udp -m udp --dport 8472 -m state --state NEW -j ACCEPT
    iptables -A INPUT -p tcp -m tcp --dport 10250 -m state --state NEW -j ACCEPT
    iptables -A INPUT -p tcp -m tcp --dport 30000:32767 -m state --state NEW -j ACCEPT
    iptables -A INPUT -p tcp -m tcp --dport 4240 -m state --state NEW -j ACCEPT
    iptables -A INPUT -p tcp -m tcp --dport 179 -m state --state NEW -j ACCEPT
    iptables -A INPUT -p udp -m udp --dport 4789 -m state --state NEW -j ACCEPT
    iptables -A INPUT -p tcp -m tcp --dport 5473 -m state --state NEW -j ACCEPT
    iptables -A INPUT -p tcp -m tcp --dport 9098 -m state --state NEW -j ACCEPT
    iptables -A INPUT -p tcp -m tcp --dport 9099 -m state --state NEW -j ACCEPT
    iptables -A INPUT -p udp -m udp --dport 51820 -m state --state NEW -j ACCEPT
    iptables -A INPUT -p udp -m udp --dport 51821 -m state --state NEW -j ACCEPT
    iptables -A INPUT -p icmp --icmp-type 8 -m state --state NEW,ESTABLISHED,RELATED -j ACCEPT
    iptables -A OUTPUT -p icmp --icmp-type 0 -m state --state ESTABLISHED,RELATED -j ACCEPT
    sudo service iptables save

bastion:

  # Number of replicas
  replicas: 1

  # EC2 Instance type
  type: "t2.micro"

tags:
  Environment: "prod"
